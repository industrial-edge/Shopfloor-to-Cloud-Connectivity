[{"id":"cd014000.9478b","type":"tab","label":"Preprocessing","disabled":false,"info":""},{"id":"7cbe1c89.c9f314","type":"mqtt in","z":"cd014000.9478b","name":"","topic":"ie/m/j/simatic/v1/s7c1/dp","qos":"0","datatype":"json","broker":"eef3a7d4.a20748","x":230,"y":200,"wires":[["1efc32f8.54e72d"]]},{"id":"5c04b1dc.1b667","type":"mqtt in","z":"cd014000.9478b","name":"","topic":"ie/d/j/simatic/v1/s7c1/dp/r/line2/default","qos":"0","datatype":"json","broker":"eef3a7d4.a20748","x":270,"y":280,"wires":[["bc99bedc.a5de1","5862f5f7.2973fc"]]},{"id":"39414034.beb91","type":"mqtt out","z":"cd014000.9478b","name":"","topic":"ie/m/j/simatic/v1/iefc/dp","qos":"2","retain":"true","broker":"eef3a7d4.a20748","x":810,"y":200,"wires":[]},{"id":"1efc32f8.54e72d","type":"function","z":"cd014000.9478b","name":"Adjust Metadata","func":"msg.payload.connections.forEach(element => {\n    element.dataPoints.forEach(elm => {\n        elm.topic = 'ie/d/j/simatic/v1/iefc/dp/r/line2/default',\n        elm.name = 'data_line1'\n    })\n})\nmsg.payload.connections[0].type = \"data_line2\";\n\nvar dataPointDefinitions=[];\ndataPointDefinitions.push({\n    name:\"Line2_totalEnergy\",\n    id:\"1\",\n    dataType:\"LReal\"\n},\n{\n    name:\"Line2_totalWater\",\n    id:\"2\",\n    dataType:\"LReal\"\n},\n{\n    name:\"Line2_totalPressured_Air\",\n    id:\"3\",\n    dataType:\"LReal\"\n},\n{\n    name:\"Line2_ProducedBottles\",\n    id:\"4\",\n    dataType:\"LReal\"\n})\nmsg.payload.connections[0].dataPoints[0].dataPointDefinitions= dataPointDefinitions;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":500,"y":200,"wires":[["39414034.beb91","307c64a9.70de9c"]]},{"id":"7b116cb9.dd09d4","type":"mqtt out","z":"cd014000.9478b","name":"","topic":"ie/d/j/simatic/v1/iefc/dp/r/line2/default","qos":"0","retain":"","broker":"eef3a7d4.a20748","x":970,"y":280,"wires":[]},{"id":"3da294b1.624d8c","type":"mqtt in","z":"cd014000.9478b","name":"","topic":"ie/m/j/simatic/v1/iefc/dp","qos":"0","datatype":"json","broker":"eef3a7d4.a20748","x":220,"y":500,"wires":[["934dabac.699438"]]},{"id":"934dabac.699438","type":"debug","z":"cd014000.9478b","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":610,"y":500,"wires":[]},{"id":"41e547de.d279d8","type":"mqtt in","z":"cd014000.9478b","name":"","topic":"ie/d/j/simatic/v1/iefc/dp/r/line2/default","qos":"0","datatype":"json","broker":"eef3a7d4.a20748","x":260,"y":580,"wires":[["869200f8.567cc"]]},{"id":"bc99bedc.a5de1","type":"function","z":"cd014000.9478b","name":"Combine Splitted Arrays","func":"var NameIDMap = global.get(\"NameIDMap\");\nvar counterArrayLen = context.get ('counterArrayLen') || 0;\nvar len =0; //length of actuale recieved array\nlen = msg.payload.vals.length;\nvar counterLen = 0;\nvar value=context.get('value')||[];\nvar Name = 0\n\n\nfor (counterLen=0; counterLen<len; counterLen++)\n{\n    Name = NameIDMap.get(msg.payload.vals[counterLen].id);\n    switch (Name)\n    {\n        case 'Line2_Machine1_Sorter_Energy_General.energyCounter':\n            value[0] = {\n                value: msg.payload.vals[counterLen].val, \n                name: NameIDMap.get(msg.payload.vals[counterLen].id),\n                ts: msg.payload.vals[0].ts\n                \n            }\n            counterArrayLen++;\n            break;\n        case 'Line2_Machine1_Sorter_PressuredAir.energyCounter': \n            value[1] = {\n                value: msg.payload.vals[counterLen].val, \n                name: NameIDMap.get(msg.payload.vals[counterLen].id),\n                ts: msg.payload.vals[0].ts\n            }\n            counterArrayLen++;\n            break;\n        case 'Line2_Machine2_Washer_Energy_General.energyCounter':\n            value[2] = {\n                value: msg.payload.vals[counterLen].val, \n                name: NameIDMap.get(msg.payload.vals[counterLen].id),\n                ts: msg.payload.vals[0].ts\n                \n            }\n            counterArrayLen++;\n            break;\n        case 'Line2_Machine2_Washer_PressuredAir.energyCounter': \n            value[3] = {\n                value: msg.payload.vals[counterLen].val, \n                name: NameIDMap.get(msg.payload.vals[counterLen].id),\n                ts: msg.payload.vals[0].ts\n            }\n            counterArrayLen++;\n            break;\n        case 'Line2_Machine2_Washer_Water.energyCounter':\n            value[4] = {\n                value: msg.payload.vals[counterLen].val, \n                name: NameIDMap.get(msg.payload.vals[counterLen].id),\n                ts: msg.payload.vals[0].ts\n                \n            }\n            counterArrayLen++;\n            break;\n        case 'Line2_Machine3_Filler_Energy_General.energyCounter': \n            value[5] = {\n                value: msg.payload.vals[counterLen].val, \n                name: NameIDMap.get(msg.payload.vals[counterLen].id),\n                ts: msg.payload.vals[0].ts\n            }\n            counterArrayLen++;\n            break;\n        case 'Line2_Machine3_Filler_PressuredAir.energyCounter':\n            value[6] = {\n                value: msg.payload.vals[counterLen].val, \n                name: NameIDMap.get(msg.payload.vals[counterLen].id),\n                ts: msg.payload.vals[0].ts\n                \n            }\n            counterArrayLen++;\n            break;\n        case 'Line2_Machine3_Filler_Water.energyCounter': \n            value[7] = {\n                value: msg.payload.vals[counterLen].val, \n                name: NameIDMap.get(msg.payload.vals[counterLen].id),\n                ts: msg.payload.vals[0].ts\n            }\n            counterArrayLen++;\n            break;\n        case 'Line2_Machine4_Packer_Energy_General.energyCounter':\n            value[8] = {\n                value: msg.payload.vals[counterLen].val, \n                name: NameIDMap.get(msg.payload.vals[counterLen].id),\n                ts: msg.payload.vals[0].ts\n                \n            }\n            counterArrayLen++;\n            break;\n        case 'Line2_Machine4_Packer_PressuredAir.energyCounter': \n            value[9] = {\n                value: msg.payload.vals[counterLen].val, \n                name: NameIDMap.get(msg.payload.vals[counterLen].id),\n                ts: msg.payload.vals[0].ts\n            }\n            counterArrayLen++;\n            break;\n        case 'Line2_Machine4_Packer.productionCounter': \n            value[10] = {\n                value: msg.payload.vals[counterLen].val, \n                name: NameIDMap.get(msg.payload.vals[counterLen].id),\n                ts: msg.payload.vals[0].ts\n            }\n            context.set('ProducedBottles',msg.payload.vals[counterLen].val);\n            break;\n        \n    }\n}\ncontext.set(\"value\",value);\ncontext.set(\"counterArrayLen\",counterArrayLen);\ncontext.set(\"TESTARRAYZAEHLER\",counterArrayLen);\nif(counterArrayLen>=10){\n    context.set(\"counterArrayLen\",0);\n    if (value.length==10)\n    {\n        value[10] = {\n                value: context.get('ProducedBottles'),\n                name: 'Line2_Machine4_Packer.productionCounter',\n                ts: msg.payload.vals[0].ts\n                \n            }\n    }\n    counterArrayLen=0;\n\n    \n}\n\nif (counterArrayLen == 0)\n{\n    msg={payload: context.get('value')};\n    context.set(\"value\",[]);\n    return msg;\n}\n\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":350,"y":360,"wires":[["4d6343fc.b42abc"]]},{"id":"869200f8.567cc","type":"debug","z":"cd014000.9478b","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":610,"y":580,"wires":[]},{"id":"f635c6b.c29b638","type":"debug","z":"cd014000.9478b","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":770,"y":100,"wires":[]},{"id":"b798127d.1a7c2","type":"function","z":"cd014000.9478b","name":"Parse Metadata","func":"/*################################# \n    Init Variables\n#################################*/\nlet nameIDMap = new Map();          //global only changed here\n\n\n/*################################# \n    Check Payload\n#################################*/\nlet m = msg.payload;\nif (m.seq == undefined) {\n    return null;\n} \n\n\n/*################################# \n    Parse payload and store name and id to the NameIDMap\n#################################*/    \n\n// Iterate through connections\nm.connections.forEach(connection => \n{\n    \n        let dataPoints = connection.dataPoints;\n\n        //  Iterate through dataPoints\n        dataPoints.forEach( dataPoint => {\n            let dataPointDefinitions = dataPoint.dataPointDefinitions;\n\n            // Iterate through dataPointDefinitions\n            dataPointDefinitions.forEach(dataPointDefinition => {\n                nameIDMap.set(dataPointDefinition.id,dataPointDefinition.name);\n            });\n        });\n    \n});\n\n\n/*################################# \n    update global maps\n#################################*/  \nglobal.set(\"NameIDMap\", nameIDMap);\n\n\nreturn msg;\n\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":500,"y":100,"wires":[["f635c6b.c29b638"]]},{"id":"ce5134ed.85fc18","type":"mqtt in","z":"cd014000.9478b","name":"","topic":"ie/m/j/simatic/v1/s7c1/dp","qos":"0","datatype":"json","broker":"eef3a7d4.a20748","x":230,"y":100,"wires":[["b798127d.1a7c2","a7a801d5.0129c"]]},{"id":"3c4e0edb.aa5872","type":"function","z":"cd014000.9478b","name":"Convert ","func":"var vals = [];\nvals.push({\n    id:\"1\",\n    qc:3,\n    ts: msg.payload.ts,\n    val:msg.payload.TotalEnergy\n},\n{\n    id:\"2\",\n    qc:3,\n    ts: msg.payload.ts,\n    val:msg.payload.TotalWater\n},\n{\n    id:\"3\",\n    qc:3,\n    ts: msg.payload.ts,\n    val:msg.payload.TotalAirPressure\n})\nif(msg.payload.ProducedBottles!=undefined)\n{\n    vals.push({\n        id:\"4\",\n        qc:3,\n        ts: msg.payload.ts,\n        val:msg.payload.ProducedBottles\n    })\n}\n\n\nmsg.payload={vals: vals,\n};\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":840,"y":360,"wires":[["7b116cb9.dd09d4"]]},{"id":"5862f5f7.2973fc","type":"debug","z":"cd014000.9478b","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":570,"y":280,"wires":[]},{"id":"307c64a9.70de9c","type":"debug","z":"cd014000.9478b","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":780,"y":160,"wires":[]},{"id":"a7a801d5.0129c","type":"debug","z":"cd014000.9478b","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":460,"y":60,"wires":[]},{"id":"4d6343fc.b42abc","type":"function","z":"cd014000.9478b","name":"Aggregation","func":"var TotalWater = 0;\nvar TotalEnergy = 0;\nvar TotalAirPressure = 0;\nvar ProducedBottles = 0;\n\n\n\nProducedBottles = msg.payload[10].value;\nTotalAirPressure = msg.payload[1].value+msg.payload[3].value+msg.payload[6].value+msg.payload[9].value;\nTotalEnergy = msg.payload[0].value+msg.payload[2].value+msg.payload[5].value+msg.payload[8].value;\nTotalWater = msg.payload[4].value+msg.payload[7].value;\n\nmsg.payload = {TotalAirPressure:TotalAirPressure, \n         TotalEnergy: TotalEnergy,\n         TotalWater: TotalWater,\n         ProducedBottles: ProducedBottles,\n         ts: msg.payload[0].ts\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":610,"y":360,"wires":[["3c4e0edb.aa5872"]]},{"id":"eef3a7d4.a20748","type":"mqtt-broker","name":"","broker":"ie-databus","port":"1883","clientid":"","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""}]