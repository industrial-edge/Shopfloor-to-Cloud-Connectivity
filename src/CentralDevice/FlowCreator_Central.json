[{"id":"f6f2187d.f17ca8","type":"tab","label":"Cloud-Connector","disabled":false,"info":""},{"id":"a95eb73f3f676697","type":"mqtt-broker","name":"","broker":"ie-databus","port":"1883","clientid":"","autoConnect":true,"usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willPayload":"","willMsg":{},"sessionExpiry":""},{"id":"759ed2c3.86191c","type":"function","z":"f6f2187d.f17ca8","name":"S7-Connector-2-CloudConnector","func":"let idNameMap = global.get(\"NameIDMap\"); //global.get(\"idNameMap\"); \n//let nameIDMap = global.get(\"NameIDMap\")\nconst measurement = 'energy1';\n\narray = msg.payload.vals\nmessage = []\narray.forEach(element => { \n    message.push( {payload: `200,${measurement},${idNameMap.get(element.id)},${element.val.toFixed(5)},,${element.ts}`} ) \n})\n\n\nreturn [ message ];","outputs":1,"noerr":0,"initialize":"","finalize":"","x":640,"y":180,"wires":[["2cf689e0.295016","3f11e231.62123e"]]},{"id":"2cf689e0.295016","type":"mqtt out","z":"f6f2187d.f17ca8","name":"","topic":"ie/cloudconnector/energy1","qos":"0","retain":"false","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"a95eb73f3f676697","x":1060,"y":180,"wires":[]},{"id":"11cd2e4d.690dd2","type":"function","z":"f6f2187d.f17ca8","name":"Parse Metadata","func":"/*################################# \n    Init Variables\n#################################*/\nlet nameIDMap = new Map();          //global only changed here\n\n\n/*################################# \n    Check Payload\n#################################*/\nlet m = msg.payload;\nif (m.seq == undefined) {\n    return null;\n} \n\n\n/*################################# \n    Parse payload and store name and id to the NameIDMap\n#################################*/    \n\n// Iterate through connections\nm.connections.forEach(connection => \n{\n    \n        let dataPoints = connection.dataPoints;\n\n        //  Iterate through dataPoints\n        dataPoints.forEach( dataPoint => {\n            let dataPointDefinitions = dataPoint.dataPointDefinitions;\n\n            // Iterate through dataPointDefinitions\n            dataPointDefinitions.forEach(dataPointDefinition => {\n                nameIDMap.set(dataPointDefinition.id,dataPointDefinition.name);\n            });\n        });\n    \n});\n\n\n/*################################# \n    update global maps\n#################################*/  \nglobal.set(\"NameIDMap\", nameIDMap);\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":580,"y":80,"wires":[["c9907698.3b5178"]]},{"id":"c9907698.3b5178","type":"debug","z":"f6f2187d.f17ca8","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":850,"y":80,"wires":[]},{"id":"3f11e231.62123e","type":"debug","z":"f6f2187d.f17ca8","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1030,"y":260,"wires":[]},{"id":"7780ac7e.af4c54","type":"function","z":"f6f2187d.f17ca8","name":"S7-Connector-2-CloudConnector","func":"let idNameMap = global.get(\"NameIDMap2\");//global.get(\"nameIDMap_line2\"); \n// nameIDMap = global.get(\"NameIDMap2\")\nconst measurement = 'energy2';\n\narray = msg.payload.vals\nmessage = []\narray.forEach(element => { \n    message.push( {payload: `200,${measurement},${idNameMap.get(element.id)},${element.val.toFixed(5)},,${element.ts}`} ) \n})\n\n\nreturn [ message ];","outputs":1,"noerr":0,"initialize":"","finalize":"","x":640,"y":460,"wires":[["d1a0da2f.c90098","1abdd57a.21223b"]]},{"id":"d1a0da2f.c90098","type":"mqtt out","z":"f6f2187d.f17ca8","name":"","topic":"ie/cloudconnector/energy2","qos":"0","retain":"false","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"a95eb73f3f676697","x":1060,"y":460,"wires":[]},{"id":"1abdd57a.21223b","type":"debug","z":"f6f2187d.f17ca8","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1030,"y":540,"wires":[]},{"id":"b2297136.7606f","type":"function","z":"f6f2187d.f17ca8","name":"Parse Metadata","func":"/*################################# \n    Init Variables\n#################################*/\nlet nameIDMap = new Map();          //global only changed here\n\n\n/*################################# \n    Check Payload\n#################################*/\nlet m = msg.payload;\nif (m.seq == undefined) {\n    return null;\n} \n\n\n/*################################# \n    Parse payload and store name and id to the NameIDMap\n#################################*/    \n\n// Iterate through connections\nm.connections.forEach(connection => \n{\n    \n        let dataPoints = connection.dataPoints;\n\n        //  Iterate through dataPoints\n        dataPoints.forEach( dataPoint => {\n            let dataPointDefinitions = dataPoint.dataPointDefinitions;\n\n            // Iterate through dataPointDefinitions\n            dataPointDefinitions.forEach(dataPointDefinition => {\n                nameIDMap.set(dataPointDefinition.id,dataPointDefinition.name);\n            });\n        });\n    \n});\n\n\n/*################################# \n    update global maps\n#################################*/  \nglobal.set(\"NameIDMap2\", nameIDMap);\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":580,"y":380,"wires":[["cf0b8c62.fb4bd"]]},{"id":"cf0b8c62.fb4bd","type":"debug","z":"f6f2187d.f17ca8","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":850,"y":380,"wires":[]},{"id":"9f416c5f31d41ba7","type":"mqtt in","z":"f6f2187d.f17ca8","name":"","topic":"ie/m/j/simatic/v1/energy1line1:iefc/dp","qos":"0","datatype":"json","broker":"a95eb73f3f676697","nl":false,"rap":true,"rh":0,"inputs":0,"x":230,"y":80,"wires":[["11cd2e4d.690dd2"]]},{"id":"68d02fac02d437ef","type":"mqtt in","z":"f6f2187d.f17ca8","name":"","topic":"ie/m/j/simatic/v1/energy2line2:iefc/dp","qos":"0","datatype":"json","broker":"a95eb73f3f676697","nl":false,"rap":true,"rh":0,"inputs":0,"x":230,"y":380,"wires":[["b2297136.7606f"]]},{"id":"8418961b065665ac","type":"mqtt in","z":"f6f2187d.f17ca8","name":"","topic":"ie/d/j/simatic/v1/energy2line2:iefc/dp/r/line2/default","qos":"0","datatype":"json","broker":"a95eb73f3f676697","nl":false,"rap":true,"rh":0,"inputs":0,"x":270,"y":460,"wires":[["7780ac7e.af4c54"]]},{"id":"fdd0dbd7cc6a1862","type":"mqtt in","z":"f6f2187d.f17ca8","name":"","topic":"ie/d/j/simatic/v1/energy1line1:iefc/dp/r/line1/default","qos":"0","datatype":"json","broker":"a95eb73f3f676697","nl":false,"rap":true,"rh":0,"inputs":0,"x":270,"y":180,"wires":[["759ed2c3.86191c"]]}]